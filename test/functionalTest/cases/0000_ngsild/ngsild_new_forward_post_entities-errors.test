# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Forwarding of POST Entities requests - errors handling for forwarded requests

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP4
orionldStart CB  -experimental -forwarding
orionldStart CP1 -experimental
orionldStart CP4 -experimental

--SHELL--
#
# 01. Create an exclusive registration R1 in CB for CP1 of entity type T, id 'urn:E1' and properties P1+P2
# 02. Create an exclusive registration R2 in CB for CP2 of entity type T, id 'urn:E1' and properties P3+P4, with an invalid hostname 'globalhost'
# 03. Create an exclusive registration R3 in CB for CP3 of entity type T, id 'urn:E1' and properties P5+P6, just CP3 isn't started
# 04. Create an exclusive registration R4 in CB for CP4 of entity type T, id 'urn:E1' and properties P7+P8, just both attrs are created before the forwarding starts
# 05. Create 'urn:E1' on CP4 without attributes (to provoke a 409 for the forwarded request in step 06)
# 06. POST /entities on CB of an entity urn:E1 with attr A1,P1,P3,P6,P7 - A1 ok locally, P1 ok in CP1, P3 ERROR, P6 OTHER ERROR, P7 - 409
# 07. GET all entities in CB, locally - see urn:E1 with attr A1
# 08. GET all entities in CP1, see urn:E1 with attr P1
# 09. GET all entities in CP4, see urn:E1 without attrs
#

echo "00. Make sure mongo is clean"
echo "============================"
echo CB:entities
mongoCmd2 ftest 'db.entities.findOne()'
echo
echo CP1:entities
mongoCmd2 ftest_cp1 'db.entities.findOne()'
echo
echo CP4:entities
mongoCmd2 ftest_cp4 'db.entities.findOne()'
echo
echo


echo "00. Make sure mongo is clean"
echo "============================"
echo CB:csubs
mongoCmd2 ftest 'db.csubs.findOne()'
echo
echo CP1:csubs
mongoCmd2 ftest_cp1 'db.csubs.findOne()'
echo
echo CP4:csubs
mongoCmd2 ftest_cp4 'db.csubs.findOne()'
echo
echo


echo "00. Make sure mongo is clean"
echo "============================"
echo CB:registrations
mongoCmd2 ftest 'db.registrations.findOne()'
echo
echo CP1:registrations
mongoCmd2 ftest_cp1 'db.registrations.findOne()'
echo
echo CP4:registrations
mongoCmd2 ftest_cp4 'db.registrations.findOne()'
echo
echo



echo "01. Create an exclusive registration R1 in CB for CP1 of entity type T, id 'urn:E1' and properties P1+P2"
echo "========================================================================================================"
payload='{
  "id": "urn:R1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "properties": [ "P1", "P2" ]
    }
  ],
  "endpoint": "http://localhost:'$CP1_PORT'",
  "mode": "exclusive",
  "operations": [ "createEntity" ],
  "contextSourceInfo": [
    {
      "key": "X1",
      "value": "x1"
    }
  ]
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "02. Create an exclusive registration R2 in CB for CP2 of entity type T, id 'urn:E1' and properties P3+P4, with an invalid hostname 'globalhost'"
echo "==============================================================================================================================================="
payload='{
  "id": "urn:R2",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "properties": [ "P3", "P4" ]
    }
  ],
  "endpoint": "http://globalhost:'$CP2_PORT'",
  "mode": "exclusive",
  "operations": [ "createEntity" ]
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "03. Create an exclusive registration R3 in CB for CP3 of entity type T, id 'urn:E1' and properties P5+P6, just CP3 isn't started"
echo "================================================================================================================================"
payload='{
  "id": "urn:R3",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "properties": [ "P5", "P6" ]
    }
  ],
  "endpoint": "http://localhost:'$CP3_PORT'",
  "mode": "exclusive",
  "operations": [ "createEntity" ],
  "contextSourceInfo": [
    {
      "key": "X3",
      "value": "x3"
    }
  ]
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "04. Create an exclusive registration R4 in CB for CP4 of entity type T, id 'urn:E1' and properties P7+P8, just both attrs are created before the forwarding starts"
echo "=================================================================================================================================================================="
payload='{
  "id": "urn:R4",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "properties": [ "P7", "P8" ]
    }
  ],
  "endpoint": "http://localhost:'$CP4_PORT'",
  "mode": "exclusive",
  "operations": [ "createEntity" ],
  "contextSourceInfo": [
    {
      "key": "X3",
      "value": "x3"
    }
  ]
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "05. Create 'urn:E1' on CP4 without attributes (to provoke a 409 for the forwarded request in step 06)"
echo "====================================================================================================="
payload='{
  "id": "urn:E1",
  "type": "T"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP4_PORT
echo
echo



echo "06. POST /entities on CB of an entity urn:E1 with attr A1,P1,P3,P6,P7 - A1 ok locally, P1 ok in CP1, P3 ERROR, P6 OTHER ERROR, P7 - 409"
echo "======================================================================================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": "For CP1",
  "P3": "For CP2",
  "P6": "For CP3",
  "P7": "For CP4",
  "A1": "For CB"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "07. GET all entities in CB, locally - see urn:E1 with attr A1"
echo "============================================================="
orionCurl --url "/ngsi-ld/v1/entities?options=concise&local=true"
echo
echo


echo "08. GET all entities in CP1, see urn:E1 with attr P1"
echo "===================================================="
orionCurl --url "/ngsi-ld/v1/entities?options=concise&local=true" --port $CP1_PORT
echo
echo


echo "09. GET all entities in CP4, see urn:E1 without attrs"
echo "====================================================="
orionCurl --url "/ngsi-ld/v1/entities?options=concise&local=true" --port $CP4_PORT
echo
echo


--REGEXPECT--
00. Make sure mongo is clean
============================
CB:entities
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP1:entities
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP4:entities
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye


00. Make sure mongo is clean
============================
CB:csubs
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP1:csubs
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP4:csubs
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye


00. Make sure mongo is clean
============================
CB:registrations
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP1:registrations
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye

CP4:registrations
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
null
bye


01. Create an exclusive registration R1 in CB for CP1 of entity type T, id 'urn:E1' and properties P1+P2
========================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R1



02. Create an exclusive registration R2 in CB for CP2 of entity type T, id 'urn:E1' and properties P3+P4, with an invalid hostname 'globalhost'
===============================================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R2



03. Create an exclusive registration R3 in CB for CP3 of entity type T, id 'urn:E1' and properties P5+P6, just CP3 isn't started
================================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R3



04. Create an exclusive registration R4 in CB for CP4 of entity type T, id 'urn:E1' and properties P7+P8, just both attrs are created before the forwarding starts
==================================================================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R4



05. Create 'urn:E1' on CP4 without attributes (to provoke a 409 for the forwarded request in step 06)
=====================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



06. POST /entities on CB of an entity urn:E1 with attr A1,P1,P3,P6,P7 - A1 ok locally, P1 ok in CP1, P3 ERROR, P6 OTHER ERROR, P7 - 409
=======================================================================================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 517
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1

{
    "entityId": "urn:E1",
    "notUpdated": [
#SORT_START
        {
            "attributes": [
                "P6"
            ],
            "detail": "Unable to connect to registrant",
            "registrationId": "urn:R3",
            "statusCode": 504,
            "title": "Unable to send distributed request"
        },
        {
            "attributes": [
                "P3"
            ],
            "detail": "Unable to resolve host name of registrant",
            "registrationId": "urn:R2",
            "statusCode": 504,
            "title": "Unable to send distributed request"
        },
        {
            "attributes": [
                "P7"
            ],
            "detail": "Entity already exists",
            "registrationId": "urn:R4",
            "statusCode": 409,
            "title": "Error during Distributed Operation"
        }
#SORT_END
    ],
    "updated": [
        "A1",
        "P1"
    ]
}


07. GET all entities in CB, locally - see urn:E1 with attr A1
=============================================================
HTTP/1.1 200 OK
Content-Length: 42
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "A1": "For CB",
        "id": "urn:E1",
        "type": "T"
    }
]


08. GET all entities in CP1, see urn:E1 with attr P1
====================================================
HTTP/1.1 200 OK
Content-Length: 43
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "P1": "For CP1",
        "id": "urn:E1",
        "type": "T"
    }
]


09. GET all entities in CP4, see urn:E1 without attrs
=====================================================
HTTP/1.1 200 OK
Content-Length: 28
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "id": "urn:E1",
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP4
dbDrop CB
dbDrop CP1
dbDrop CP4
