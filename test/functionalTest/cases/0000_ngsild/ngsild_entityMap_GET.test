# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
GET /entities with Entity Map

--SHELL-INIT--
dbInit CB
dbInit CP1
#export CB_TRACELEVELS=${CB_TRACELEVELS:-31,70-79,80,110}
orionldStart CB  -experimental -forwarding -wip entityMaps
orionldStart CP1 -experimental

--SHELL--

#
# 01. In CB,  create an entity urn:E1 with attribute  P1+R1
# 02. In CB,  create an entity urn:E2 with attribute  P2+R2
# 03. In CP1, create an entity urn:E1 with attributes P1+P2+R1
# 04. In CP1, create an entity urn:E2 with attributes P1+P2+R1
# 05. Create an inclusive registration R1 on urn:E1/P1+R1 for CP1
# 06. Create an inclusive registration R2 on urn:E2/P1+R1 for CP1
# 07. Create an entity map for a GET /entities?type=T
# 08. GET the entity map - see E1 and E2 both with "local" and R1/2
#

echo "01. In CB,  create an entity urn:E1 with attribute  P1+R1"
echo "========================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": "In CB",
  "P3": "In CB",
  "R1": { "object": "urn:E2" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. In CB,  create an entity urn:E2 with attribute  P2+R2"
echo "========================================================="
payload='{
  "id": "urn:E2",
  "type": "T",
  "P2": "In CB",
  "R2": { "object": "urn:E1" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "03. In CP1, create an entity urn:E1 with attributes P1+P2+R1"
echo "============================================================"
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": "P1 in CP1",
  "P2": "P2 in CP1",
  "R1": { "object": "urn:in:cp1" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "04. In CP1, create an entity urn:E2 with attributes P1+P2+R1"
echo "============================================================"
payload='{
  "id": "urn:E2",
  "type": "T",
  "P1": "P1 in CP1",
  "P2": "P2 in CP1",
  "R1": { "object": "urn:in:cp1" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "05. Create an inclusive registration R1 on urn:E1/P1+R1 for CP1"
echo "==============================================================="
payload='{
  "id": "urn:R1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "propertyNames": [ "P1" ],
      "relationshipNames": [ "R1" ]
    }
  ],
  "mode": "inclusive",
  "operations": [ "queryEntity" ],
  "endpoint": "http://localhost:'$CP1_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "06. Create an inclusive registration R2 on urn:E1/P1+R1 for CP1"
echo "==============================================================="
payload='{
  "id": "urn:R2",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E2",
          "type": "T"
        }
      ],
      "propertyNames": [ "P1" ],
      "relationshipNames": [ "R1" ]
    }
  ],
  "mode": "inclusive",
  "operations": [ "queryEntity" ],
  "endpoint": "http://localhost:'$CP1_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo



echo "07. Create an entity map for a GET /entities?type=T"
echo "==================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=T&count=true&limit=0'
entityMap=$(echo "$_responseHeaders" | grep NGSILD-EntityMap: | awk -F ': ' '{ print $2 }' | tr -d "\r\n")
echo
echo

echo '08. GET the entity map - see E1 and E2 both with "local" and R1/2'
echo '================================================================='
orionCurl --url /ngsi-ld/v1/entityMaps/$entityMap
echo
echo


--REGEXPECT--
01. In CB,  create an entity urn:E1 with attribute  P1+R1
=========================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. In CB,  create an entity urn:E2 with attribute  P2+R2
=========================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E2



03. In CP1, create an entity urn:E1 with attributes P1+P2+R1
============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



04. In CP1, create an entity urn:E2 with attributes P1+P2+R1
============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E2



05. Create an inclusive registration R1 on urn:E1/P1+R1 for CP1
===============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R1



06. Create an inclusive registration R2 on urn:E1/P1+R1 for CP1
===============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:R2



07. Create an entity map for a GET /entities?type=T
===================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
NGSILD-EntityMap: urn:ngsi-ld:entity-map:REGEX(.*)
NGSILD-Results-Count: 2

[]


08. GET the entity map - see E1 and E2 both with "local" and R1/2
=================================================================
HTTP/1.1 200 OK
Content-Length: 57
Content-Type: application/json
Date: REGEX(.*)

{
    "urn:E1": [
        "@none",
        "urn:R1"
    ],
    "urn:E2": [
        "@none",
        "urn:R2"
    ]
}


--TEARDOWN---
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
