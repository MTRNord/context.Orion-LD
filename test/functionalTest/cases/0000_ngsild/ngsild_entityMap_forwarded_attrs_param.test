# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Content-Type, @context, and tenant in Distributed Operations

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental -forwarding
accumulatorStart --pretty-print --url /ngsi-ld/v1/entities/urn:E1

--SHELL--
#
# 01. Create an entity urn:E1 with an attribute P1 in CB
# 02. Create a matching registration for the accumulator, with attrs=P1,P2
# 03. Retrieve urn:E1 - provoke a forwarded GET to accumulator, with attrs=P1,P2
# 04. Dump accumulator and see attrs=P1,P2
#

echo "01. Create an entity urn:E1 with an attribute P1 in CB"
echo "======================================================"
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 1
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Create a matching registration for the accumulator, with attrs=P1,P2"
echo "========================================================================"
payload='{
  "id": "urn:ngsi-ld:registration:R1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "propertyNames": [ "P1", "P2" ]
    }
  ],
  "mode": "inclusive",
  "operations": [ "queryEntity", "retrieveEntity" ],
  "endpoint": "http://localhost:'$LISTENER_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "03. Retrieve urn:E1 - provoke a forwarded GET to accumulator, with attrs=P1,P2"
echo "=============================================================================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1
echo
echo


echo "04. Dump accumulator and see attrs=P1,P2"
echo "========================================"
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create an entity urn:E1 with an attribute P1 in CB
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. Create a matching registration for the accumulator, with attrs=P1,P2
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:registration:R1



03. Retrieve urn:E1 - provoke a forwarded GET to accumulator, with attrs=P1,P2
==============================================================================
HTTP/1.1 200 OK
Content-Length: 61
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 1
    },
    "id": "urn:E1",
    "type": "T"
}


04. Dump accumulator and see attrs=P1,P2
========================================
GET http://REGEX(.*)/ngsi-ld/v1/entities/urn:E1?attrs=P1,P2&options=sysAttrs&type=T
User-Agent: orionld/REGEX(.*)
Host: localhost:9997
Accept: application/json
Date: REGEX(.*)
X-Forwarded-For: REGEX(.*)
Via: 1.1 REGEX(.*)
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
