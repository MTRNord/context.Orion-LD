# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Retrieval of entities in the GeoJSON format

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. Create an entity with a location GeoProperty 
# 02. GET the entity in GeoJSON format 
# 03. GET the entity in GeoJSON format with keyValues
# 04. GET the entity in GeoJSON format and Prefer header forcing Link header
# 05. Retrieve E1 in GeoJSON format with URI param geometryProperty=abc (abc doesn't exist => geometry: null)
# 06. Retrieve E1 in GeoJSON format with URI param geometryProperty=location
# 07. Retrieve E1 in GeoJSON format with URI param geometryProperty=otherGeoProp
# 08. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty)
# 09. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty) with key-values
# 10. Attempts to retrieve non-existing E2 in GeoJSON format
# 11. Retrieve Entity with geo+json, attrs (without location) and key-values
# 12. Retrieve Entity with geo+json, attrs (with location) and key-values
#

echo "01. Create an entity with a location GeoProperty"
echo "================================================"
payload='{
  "id": "urn:ngsi-ld:City:Madrid",
  "type": "City",
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [-3.691944, 40.418889]
    }
  },
  "otherGeoProp": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 1, 2 ]
    }
  },
  "P1": {
    "type": "Property",
    "value": 12
  },
  "R1": {
    "type": "Relationship",
    "object": "urn:xxx"
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "02. GET the entity in GeoJSON format"
echo "===================================="
orionCurl --url /ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid --out "application/geo+json"
echo
echo


echo "03. GET the entity in GeoJSON format with keyValues"
echo "==================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&options=keyValues' --out "application/geo+json"
echo
echo


echo "04. GET the entity in GeoJSON format and Prefer header forcing Link header"
echo "=========================================================================="
orionCurl --url /ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid --out "application/geo+json" -H "Prefer: body=json"
echo
echo


echo "05. Retrieve E1 in GeoJSON format with URI param geometryProperty=abc (abc doesn't exist => geometry: null)"
echo "==========================================================================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&geometryProperty=abc' --out "application/geo+json"
echo
echo


echo "06. Retrieve E1 in GeoJSON format with URI param geometryProperty=location"
echo "=========================================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&geometryProperty=location' --out "application/geo+json"
echo
echo


echo "07. Retrieve E1 in GeoJSON format with URI param geometryProperty=otherGeoProp"
echo "=============================================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&geometryProperty=otherGeoProp' --out "application/geo+json"
echo
echo


echo "08. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty)"
echo "========================================================================================"
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&geometryProperty=P1' --out "application/geo+json"
echo
echo


echo "09. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty) with key-values"
echo "========================================================================================================"
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&geometryProperty=P1&options=keyValues' --out "application/geo+json"
echo
echo


echo "10. Attempts to retrieve non-existing E2 in GeoJSON format"
echo "=========================================================="
orionCurl --url /ngsi-ld/v1/entities?id=urn:ngsi-ld:E2 --out "application/geo+json"
echo
echo


echo "11. Retrieve Entity with geo+json, attrs (without location) and key-values"
echo "=========================================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&attrs=P1,R1&options=keyValues&local=true' --out "application/geo+json"
echo
echo


echo "12. Retrieve Entity with geo+json, attrs (with location) and key-values"
echo "======================================================================="
orionCurl --url '/ngsi-ld/v1/entities?id=urn:ngsi-ld:City:Madrid&attrs=P1,R1,location&options=keyValues' --out "application/geo+json"
echo
echo


--REGEXPECT--
01. Create an entity with a location GeoProperty
================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:City:Madrid



02. GET the entity in GeoJSON format
====================================
HTTP/1.1 200 OK
Content-Length: 524
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


03. GET the entity in GeoJSON format with keyValues
===================================================
HTTP/1.1 200 OK
Content-Length: 401
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": 12,
                "R1": "urn:xxx",
                "location": {
                    "coordinates": [
                        -3.691944,
                        40.418889
                    ],
                    "type": "Point"
                },
                "otherGeoProp": {
                    "coordinates": [
                        1,
                        2
                    ],
                    "type": "Point"
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


04. GET the entity in GeoJSON format and Prefer header forcing Link header
==========================================================================
HTTP/1.1 200 OK
Content-Length: 446
Content-Type: application/geo+json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "features": [
        {
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


05. Retrieve E1 in GeoJSON format with URI param geometryProperty=abc (abc doesn't exist => geometry: null)
===========================================================================================================
HTTP/1.1 200 OK
Content-Length: 476
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": null,
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


06. Retrieve E1 in GeoJSON format with URI param geometryProperty=location
==========================================================================
HTTP/1.1 200 OK
Content-Length: 524
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


07. Retrieve E1 in GeoJSON format with URI param geometryProperty=otherGeoProp
==============================================================================
HTTP/1.1 200 OK
Content-Length: 508
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    1,
                    2
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


08. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty)
========================================================================================
HTTP/1.1 200 OK
Content-Length: 476
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": null,
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": {
                    "type": "Property",
                    "value": 12
                },
                "R1": {
                    "object": "urn:xxx",
                    "type": "Relationship"
                },
                "location": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            -3.691944,
                            40.418889
                        ],
                        "type": "Point"
                    }
                },
                "otherGeoProp": {
                    "type": "GeoProperty",
                    "value": {
                        "coordinates": [
                            1,
                            2
                        ],
                        "type": "Point"
                    }
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


09. Retrieve E1 in GeoJSON format with URI param geometryProperty=P1 (not a GeoProperty) with key-values
========================================================================================================
HTTP/1.1 200 OK
Content-Length: 353
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": null,
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": 12,
                "R1": "urn:xxx",
                "location": {
                    "coordinates": [
                        -3.691944,
                        40.418889
                    ],
                    "type": "Point"
                },
                "otherGeoProp": {
                    "coordinates": [
                        1,
                        2
                    ],
                    "type": "Point"
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


10. Attempts to retrieve non-existing E2 in GeoJSON format
==========================================================
HTTP/1.1 200 OK
Content-Length: 42
Content-Type: application/geo+json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "features": [],
    "type": "FeatureCollection"
}


11. Retrieve Entity with geo+json, attrs (without location) and key-values
==========================================================================
HTTP/1.1 200 OK
Content-Length: 285
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": 12,
                "R1": "urn:xxx",
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


12. Retrieve Entity with geo+json, attrs (with location) and key-values
=======================================================================
HTTP/1.1 200 OK
Content-Length: 349
Content-Type: application/geo+json
Date: REGEX(.*)

{
    "features": [
        {
            "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
            "geometry": {
                "coordinates": [
                    -3.691944,
                    40.418889
                ],
                "type": "Point"
            },
            "id": "urn:ngsi-ld:City:Madrid",
            "properties": {
                "P1": 12,
                "R1": "urn:xxx",
                "location": {
                    "coordinates": [
                        -3.691944,
                        40.418889
                    ],
                    "type": "Point"
                },
                "type": "City"
            },
            "type": "Feature"
        }
    ],
    "type": "FeatureCollection"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
